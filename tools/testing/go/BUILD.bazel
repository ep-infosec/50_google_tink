load("@io_bazel_rules_go//go:def.bzl", "go_binary")

package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

go_binary(
    name = "aead_cli_go",
    testonly = 1,  # keep
    srcs = ["aead_cli.go"],
    out = "aead_cli_go",
    data = ["//testdata/gcp:credentials"],
    deps = [
        "@tink_go//aead",
        "@tink_go//core/registry",
        "@tink_go//integration/awskms",
        "@tink_go//integration/gcpkms",
        "@tink_go//keyset",
        "@tink_go//testkeyset",
    ],
)

go_binary(
    name = "public_key_sign_cli_go",
    testonly = 1,  # keep
    srcs = ["public_key_sign_cli.go"],
    out = "public_key_sign_cli_go",
    deps = [
        "@tink_go//keyset",
        "@tink_go//signature",
        "@tink_go//testkeyset",
    ],
)

go_binary(
    name = "public_key_verify_cli_go",
    testonly = 1,  # keep
    srcs = ["public_key_verify_cli.go"],
    out = "public_key_verify_cli_go",
    deps = [
        "@tink_go//keyset",
        "@tink_go//signature",
        "@tink_go//testkeyset",
    ],
)

go_binary(
    name = "generate_envelope_keyset",
    testonly = 1,  # keep
    srcs = ["generate_envelope_keyset.go"],
    out = "generate_envelope_keyset",
    data = [
        "//testdata/aws:credentials",
        "//testdata/gcp:credentials",
    ],
    tags = ["no_rbe"],
    deps = [
        "@tink_go//aead",
        "@tink_go//core/registry",
        "@tink_go//insecurecleartextkeyset",
        "@tink_go//integration/awskms",
        "@tink_go//integration/gcpkms",
        "@tink_go//keyset",
        "@tink_go//proto/tink_go_proto",
    ],
)
